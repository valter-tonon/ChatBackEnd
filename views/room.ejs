<!DOCTYPE html>
<!--  This site was created in Webflow. http://www.webflow.com  -->
<!--  Last Published: Wed Oct 25 2017 13:24:09 GMT+0000 (UTC)  -->
<html data-wf-page="59f067da9cd27200014f0cae" data-wf-site="59f067da9cd27200014f0cad">
<head>
  <meta charset="utf-8">
  <title>ChatSocket.io</title>
  <meta content="width=device-width, initial-scale=1" name="viewport">
  <meta content="Webflow" name="generator">
  <link href="css/normalize.css" rel="stylesheet" type="text/css">
  <link href="css/webflow.css" rel="stylesheet" type="text/css">
  <link href="css/chatsocket-io.webflow.css" rel="stylesheet" type="text/css">
  <script src="https://ajax.googleapis.com/ajax/libs/webfont/1.4.7/webfont.js" type="text/javascript"></script>
  <script type="text/javascript">WebFont.load({  google: {    families: ["Open Sans:300,300italic,400,400italic,600,600italic,700,700italic,800,800italic"]  }});</script>
  <!-- [if lt IE 9]><script src="https://cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv.min.js" type="text/javascript"></script><![endif] -->
  <script type="text/javascript">!function(o,c){var n=c.documentElement,t=" w-mod-";n.className+=t+"js",("ontouchstart"in o||o.DocumentTouch&&c instanceof DocumentTouch)&&(n.className+=t+"touch")}(window,document);</script>
  <link href="https://daks2k3a4ib2z.cloudfront.net/img/favicon.ico" rel="shortcut icon" type="image/x-icon">
  <link href="https://daks2k3a4ib2z.cloudfront.net/img/webclip.png" rel="apple-touch-icon">
</head>
<body>
  <div class="container w-container">
    <div class="rooms">
      <h1 class="title-rooms">Salas Disponíveis</h1>
      <ul class="room-list w-list-unstyled">
        <li class="room-item">Sala 1</li>
        <li class="room-item">Sala 2</li>
        <li class="room-item">Sala 3 <span class="notifications">(2)</span></li>
      </ul>
      <div class="add-room">+</div>
    </div>
    <div class="room">
      <div class="messages">
        <div class="message"><span class="author">Valter </span><br><span class="msg-body">Seja Bem Vindo!</span></div>
      </div>
      <div class="new-message-form w-form">
        <form class="form">
          <textarea id="field" name="field" maxlength="5000" placeholder="Digite sua mensagem e pressione &lt;Enter&gt;" autofocus="true" class="msg w-input"></textarea>
          <button type="button" class="send-audio w-button">Enviar<br>Áudio</button>
        </form>
      </div>
    </div>
  </div>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js" type="text/javascript"></script>
  <script src="js/webflow.js" type="text/javascript"></script>
  <!-- [if lte IE 9]><script src="https://cdnjs.cloudflare.com/ajax/libs/placeholders/3.0.2/placeholders.min.js"></script><![endif] -->
  <script src="/socket.io/socket.io.js"></script>
  <script>
    $(function(){
      const socket = io()
      let selectedRoom = ''
      let mediaRecorder
      let audioPermission = false

      navigator
        .mediaDevices
        .getUserMedia({ audio: true })
        .then( stream => {
          audioPermission = true
          mediaRecorder = new MediaRecorder(stream)
          let chunks = []
          mediaRecorder.ondataavailable = data => {
            // data received
            chunks.push(data.data)
          }
          mediaRecorder.onstop = () => {
            // data stopped
            /**/

            const reader = new window.FileReader()
            const blob = new Blob(chunks, { type: 'audio/ogg; codec=opus'})
            reader.readAsDataURL(blob)
            reader.onloadend = () => {
              socket.emit('sendAudio', { 
                data: reader.result,
                room: selectedRoom
              })
            }

            chunks = []
          }
        }, err => {
          mediaRecorder = null
          audioPermission = false
        })

      $('.send-audio')
        .mouseup(function(){
          console.log('up')
          if(audioPermission && selectedRoom !==''){
            mediaRecorder.stop()
          }
        })
        .mousedown(function(){
          console.log('down')
          if(audioPermission && selectedRoom !==''){
            mediaRecorder.start()
          }
        })

      $('.msg').keyup(function(key){
        if(selectedRoom !== '' && key.keyCode === 13){
          // enviar a mensagem no <enter>
          socket.emit('sendMsg', { 
            msg: $('.msg').val(),
            room: selectedRoom
          })
          $('.msg').val('')
        }
      })

      $('.room-list').on('click', '.room-item', function(){
        const roomId = $(this).attr('data-id')
        socket.emit('join', roomId)
        selectedRoom = roomId
        $('#'+roomId+' .notifications').show()
        $('#'+roomId+' .notifications span').text('0')
      })

      const addRoom = (id, roomName) => {
        $('.room-list').append('<li id="'+id+'" data-id="'+id+'" class="room-item">'+roomName+' <span class="notifications">(<span>0</span>)</span></li>')
        $('#'+id+' .notifications').hide()
      }
      const renderMsg = (type, msg) => {
        if(type==='text'){
          return msg
        }else if(type==='audio'){
          return `
            <audio src="${msg}" controls="true"></audio>
          `
        }
        return ''
      }
      const addMsg = (msg) => {
        const html = `
          <div class="message">
              <span class="author">${msg.author}</span><br>
              <span class="msg-body">${renderMsg(msg.msgType, msg.message)}</span>
          </div>
          `
          $('.messages').append(html)
      }
      // recebe uma nova sala
      socket.on('newRoom', room => {
        addRoom(room._id, room.name)
      })
      // recebe a lista inicial de rooms
      socket.on('roomList', rooms => {
        $('.room-list').html('')
        rooms.map( room => {
          addRoom(room._id, room.name)
        })
      })
      socket.on('newMsg', msg => {
        if(selectedRoom === msg.room){
          addMsg(msg)
        }else{
          console.log(msg)
          // atualizar contador de msgs nao lidas
          const id = msg.room
          console.log($('#'+id+' .notifications span'))
          let count = parseInt($('#'+id+' .notifications span').text())
          count++
          $('#'+id+' .notifications span').text(count)
        }
      })

      socket.on('newAudio', msg => {
        if(selectedRoom === msg.room){
          addMsg(msg)
        }else{
          // atualizar contador de msgs nao lidas
        }
      })

      socket.on('msgsList', msgs => {
        $('.messages').html('')
        msgs.map(addMsg)
      })
      $('.add-room').click(function(){
        const roomName = prompt('Informe o nome da sala')
        if(roomName){
          socket.emit('addRoom', roomName)
        }
      })
    })
  </script>
</body>
</html>